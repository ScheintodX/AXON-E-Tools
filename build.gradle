apply plugin: 'java'
apply plugin: 'eclipse-wtp'

version = '1.0.0'

repositories {
	mavenCentral()
}

eclipse {
	classpath {
		defaultOutputDir = file('build.eclipse')
		file {
			whenMerged { classpath -> 
				classpath.entries.findAll { entry -> entry.kind == 'lib' }*.exported = true
			}
			withXml { cp ->
				def node = cp.asNode()
				node.children().each { child ->

					if( child.@kind == 'lib' ) {
						def attribs = child.appendNode 'attributes'
						def attrib = attribs.appendNode 'attribute';
						attrib.@name = "org.eclipse.jst.component.nondependency"
						attrib.@value = ""
					}
					if( child.@kind == "con" && child.@path.contains( 'Tomcat' ) ) {
						def attrib = child.appendNode( 'attributes' ).appendNode( 'attribute' )
						attrib.@name="owner.project.facets"
						attrib.@value="jst.utility"
					}
				}
				node.appendNode( 'xml', 'is what i love' )
			}
		}
		containers "org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v7.0.23",
				"org.eclipse.jst.j2ee.internal.module.container" 
	}
	project {
		natures = [ 'org.eclipse.jem.workbench.JavaEMFNature',
				'org.eclipse.wst.common.modulecore.ModuleCoreNature',
				'org.eclipse.jdt.core.javanature',
				'org.eclipse.wst.common.project.facet.core.nature' ]
		buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		buildCommand 'org.eclipse.wst.validation.validationbuilder'
	}
}

dependencies {

	compile 'commons-codec:commons-codec:1.4'
	compile 'commons-lang:commons-lang:2.6'

	compile 'org.hibernate.common:hibernate-commons-annotations:4.0.2.Final'
	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'

	compile 'net.sf.ehcache:ehcache-core:2.5.2'
	compile 'org.apache.httpcomponents:httpclient:4.0.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.2.0'

	compile 'org.slf4j:slf4j-api:1.6.1'

	compile 'javax.servlet:javax.servlet-api:3.0.1'

	compile 'org.testng:testng:6.8+'

	// =======================================

	testRuntime 'ch.qos.logback:logback-classic:1.1.2'
	testRuntime 'ch.qos.logback:logback-core:1.1.2'
	testRuntime 'org.slf4j:jcl-over-slf4j:1.6.1'
	testRuntime 'org.slf4j:log4j-over-slf4j:1.6.1'
}

test {
	useTestNG(){
		suites file('src/test/CompleteRun.xml')
	}
}
